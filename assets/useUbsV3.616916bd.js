import{u as a}from"./contract.48c06e9b.js";import{h as t,C as c,B as n,_ as e}from"./index.2e479538.js";const i=e;function o(){const e=a();async function o(a){const t=new c(i,"0x1F88E9956c8f8F64c8D5fEF5eD8A818E2237112c"),o=await t.call("balanceOf",[e.account]),r=await t.call("allowance",[e.account,"0xF882368B672290f174D57C1c0A1ac4Fc21525C87"]),u=-1===new n(r).comparedTo(new n(a)),s=!(-1===new n(o).comparedTo(new n(a)));return u?(e.changeTipV3(!0),!1):(s||e.changeTipV3(!0),s)}return{getSysParam:async function(a){return await t.call("getSystemInfo",[a])},getAccount:async function(a,c,n){try{return await t.call("getAccountInfo",[a,c,n])}catch(e){}},stake:async function(a,c,n){try{return await t.execute("stake",[a,c,n])}catch(e){throw new Error(e.toString())}},unstake:async function(a,c,n){await o(n)&&await t.execute("unlockStake",[a,c])},withdraw:async function(a,c){await o(c)&&await t.execute("withdrawReward",[a])},trigger:async function(a,c,n){if(await o(n))return await t.execute("trigger",[a,c])},issueNFT:async function(a){await t.execute("issueNFT",[a])},changeAccountMedal:async function(a,c){await t.execute("changeAccountMedal",[a,c])}}}export{o as u};
