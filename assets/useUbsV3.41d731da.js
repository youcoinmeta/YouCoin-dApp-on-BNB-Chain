import{u as a}from"./contract.8e54d2d5.js";import{E as t}from"./ERC20.31929c0b.js";import{j as c,C as n,B as e}from"./index.4f4338fe.js";const o=t;function i(){const t=a();async function i(a){const c=new n(o,"0x1F88E9956c8f8F64c8D5fEF5eD8A818E2237112c"),i=await c.call("balanceOf",[t.account]),r=await c.call("allowance",[t.account,"0xF882368B672290f174D57C1c0A1ac4Fc21525C87"]),u=-1===new e(r).comparedTo(new e(a)),s=!(-1===new e(i).comparedTo(new e(a)));return u?(t.changeTipV3(!0,"v3"),!1):(s||t.changeTipV3(!0,"v3"),s)}return{getSysParam:async function(a){return await c.call("getSystemInfo",[a])},getAccount:async function(a,t,n){try{return await c.call("getAccountInfo",[a,t,n])}catch(e){}},stake:async function(a,t,n){try{return await c.execute("stake",[a,t,n])}catch(e){throw new Error(e.toString())}},unstake:async function(a,t,n){await i(n)&&await c.execute("unlockStake",[a,t])},withdraw:async function(a,t){await i(t)&&await c.execute("withdrawReward",[a])},trigger:async function(a,t,n){if(await i(n))return await c.execute("trigger",[a,t])},issueNFT:async function(a){await c.execute("issueNFT",[a])},changeAccountMedal:async function(a,t){await c.execute("changeAccountMedal",[a,t])}}}export{i as u};
