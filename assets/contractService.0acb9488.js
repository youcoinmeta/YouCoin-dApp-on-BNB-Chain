import{W as t}from"./index.72d226ca.js";class e{web3;contract;contractAddress;gasBuffer;constructor(e,r,s){this.web3=new t(window.ethereum),this.contractAddress=r,this.gasBuffer=s&&s.gasBuffer||1.2,this.contract=new this.web3.eth.Contract(e,r,{from:s&&s.defaultAccount})}setDefaultAccount(t){this.contract.options.from=t}async call(t,e=[]){try{const r=this.contract.methods[t](...e);return await r.call()}catch(r){throw this.formatContractError(r)}}async send(t,e=[],r={}){try{const s=this.contract.methods[t](...e),a=(this.contract.options.from||window.ethereum.selectedAddress||window.ethereum.address,await s.estimateGas({from:this.contract.options.from||window.ethereum.selectedAddress||window.ethereum.address,value:r.value})),o={from:this.contract.options.from||window.ethereum.selectedAddress||window.ethereum.address,gas:Math.floor(a*this.gasBuffer),value:r.value||0};if(r.maxFeePerGas&&r.maxPriorityFeePerGas)o.maxFeePerGas=r.maxFeePerGas,o.maxPriorityFeePerGas=r.maxPriorityFeePerGas,o.type="0x2";else if(r.gasPrice)o.gasPrice=r.gasPrice;else{const t=await this.web3.eth.getGasPrice();o.gasPrice=t}r.gas&&(o.gas=r.gas);const c=await s.send(o);return{transactionHash:c.transactionHash,transactionReceipt:c}}catch(s){throw this.formatContractError(s)}}subscribeEvent(t,e,r={}){return this.contract.events[t]({filter:r.filter,fromBlock:r.fromBlock||"latest",toBlock:r.toBlock||"latest"}).on("data",e).on("error",(t=>{}))}async getPastEvents(t,e={}){return this.contract.getPastEvents(t,{filter:e.filter,fromBlock:e.fromBlock||0,toBlock:e.toBlock||"latest"})}formatContractError(t){const e=Object.prototype.toString.call(t);if("[object Object]"===e)return new Error(t.code);const r=t.message;if("[object Error]"===e){if(r.includes("User denied transaction signature"))return new Error("4001");if(r.includes("Internal JSON-RPC error.")){const t=r.replace("Internal JSON-RPC error.",""),e=JSON.parse(t);if(e.data.startsWith("0x08c379a0")){const t=this.web3.utils.hexToUtf8("0x"+e.data.slice(138));this.web3.eth.abi.decodeParameter("string","0x"+e.data.slice(10));return new Error(t||"Unknown revert reason")}return new Error(e.message)}}return"INSUFFICIENT_FUNDS"===t.code?new Error("账户余额不足"):"NETWORK_ERROR"===t.code?new Error("网络连接失败"):t}}export{e as C};
