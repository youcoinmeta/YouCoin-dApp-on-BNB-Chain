import{u as e,b as a,c as t}from"./contract.ce213280.js";import{V as n,C as s,B as i,_ as o,u as r}from"./index.c6702a68.js";import{W as c,P as u,c as l,r as w,i as d}from"./index.a3b6196b.js";const f=o,g=new c,{utils:v}=g;function y(){const a=e();async function t(e){const t=new s(f,"0x1F88E9956c8f8F64c8D5fEF5eD8A818E2237112c"),n=await t.call("balanceOf",[a.account]),o=await t.call("allowance",[a.account,"0x3341391e8750ca8Db57F69570AfAf0319c6b93C3"]),r=-1===new i(o).comparedTo(new i(e)),c=!(-1===new i(n).comparedTo(new i(e)));return r?(a.changeTipV2(!0),!1):(c||a.changeTipV2(!0),c)}return{unstake:async function(e,a,s){v.bytesToHex(JSON.parse(JSON.stringify(e))),await t(s)&&await n.execute("abcdeunstake",[e,a])},activeUser:async function(){await n.execute("abcdeactive",[])},restake:async function(e){await n.execute("abcderestake",[e])},getSysParam:async function(e){return await n.call("getSysParam",[e])},getAccount:async function(e,a,t,s){try{return await n.call("getAccount",[e,a,t,s])}catch(i){}},stake:async function(e,a,t,s){try{return await n.execute("stake",[e,a,t,s])}catch(i){}},enableAutoReinvest:async function(e,a){await n.execute("enableAutoReinvest",[e,a])},withdrawKeepPool:async function(e,a){await n.execute("withdrawKeepPool",[e,a])},withdraw:async function(e){await t(e)&&await n.execute("withdraw",[])},issueNFT:async function(e){await n.execute("abcdeissueNFT",[e])},trigger:async function(e,a){if(await t(a))return await n.execute("abcdetrigger",[e])},addToken:async function(e){await n.execute("addToken",[e])}}}const{getSysParam:k,getAccount:m}=y(),{getAccountID:h,getUserAccount:A}=a();async function p(e,a){let t=[];const n=await m("0",e,a,!1),{orders:{orders:s,unfinish:i}}=n;if(t=t.concat(s),i){const a=s[s.length-1].link.id;let n=await p(e,a);t=t.concat(n)}return t}const S=u("v2",(()=>{const e=t(),a=r(),n=l((()=>a.account)),s=w(""),o=w("0"),c=w("0"),u=w("0"),f=w({avaiReward:"0",id:"0",level:"0",medalValue:"0",myselfAchieveLevel:"0",totalAffUsd:"0",totalReward:"0",needActive:"0",totalStakeAffWithdraw:"0",totalStakeUsd:"0",withdrawAddrs:[],migrateReward:"0",totalWithdrawUSD:"",migrateRewardUsd:"0"}),g=w([]),v=w({autoRestakeGapTime:"0",damagesRatio:"0",day:"300",lastStakeTime:"0",newOrderID:"0",noStakePauseDays:"0",sero:"0xBB18b3210eB0d8926fF89D339495F0940b736162",stake2Burn:"0",stake2DAO:"0",stake2Market:"0",stake2Sero:"0",stake2Share:"0",stake2UCON:"0",startTime:"1683775446",sysCoinAffAssignTotal:"0",sysCoinAffTotal:"0",sysCoinBoughtTotal:"0",sysCoinBurnTotal:"0",sysCoinDamages2Share:"0",sysCoinDamagesTotal:"0",sysCoinFeeBurnTotal:"0",sysCoinReplenish:"0",sysCoinRewardActually:"0",sysCoinStakeBurnTotal:"0",sysCoinTotalReward:"0",tradeFee:"0",triggleFee:"0",ubsInvestTotal:"0",ucon:"0xD755f05d67a4cc2Da81923ACdAE5640A9e863ABc",usdDecimal:"1000000",withdrawFee:"0",triggerFee:"0"}),y=w([]);d(n,(async e=>{s.value=localStorage.getItem(n.value)||"Account",C()}));const A=l((()=>{const{stake2Burn:e,stake2DAO:a,stake2Market:t,stake2Sero:n,stake2Share:s,stake2UCON:o}=v.value,r=new i(e).plus(new i(a)).plus(new i(t)).plus(new i(n)).plus(new i(s)).plus(new i(o)).times(new i(100));return new i(1e20).minus(r).toString(10)})),S=l((()=>{if("0"===o.value)return"0";return new i(v.value.withdrawFee).times(new i("1e18")).div(o.value).toString(10)})),T=l((()=>"0"===o.value?"0":new i(v.value.triggerFee).times(new i("1e18")).div(o.value).toString(10))),R=l((()=>{const{totalReward:e="0",totalAffReward:a="0",migrateReward:t="0"}=f.value;return new i(e).plus(new i(a)).plus(t).toString(10)}));async function C(){if(!n.value)return;const{medalInfos:a,param:t,tokens:s}=await k(!1);v.value=t;let r,l=await h(n.value),w=[];if("0"!==l.id){const a=await m("0",n.value,"0x000000000000000000000000000000000000000000000000000000000000",!1),{accountInfo:t,atokens:s,orders:i}=a;w=await p(n.value,"0x000000000000000000000000000000000000000000000000000000000000"),f.value=t;const{issueMedalLevel:o,latestMedalLevel:c}=f.value;e.change(o,c),r=i,g.value=s}else f.value={avaiReward:"0",id:"0",level:"0",medalValue:"0",myselfAchieveLevel:"0",totalAffUsd:"0",totalReward:"0",needActive:"0",totalStakeAffWithdraw:"0",totalStakeUsd:"0",withdrawAddrs:[],migrateReward:"0",totalWithdrawUSD:"",migrateRewardUsd:"0"};const d=[];for(let e=0;e<s.length;e++){const a=s[e];let{name:t}=s[e];if("bSERO"===t&&(t="SERO"),"YouCoin"===t&&(t="UCON"),"Ethereum Token"===t&&(t="ETH"),"UCON"===t&&(o.value=s[e].ti.price),"SERO"===t&&(c.value=a.ti.price),"ETH"===t&&(u.value=i(a.ti.price).dividedBy("1000000").toString(10)),"0"!==l.id){const a=w.filter((a=>a.token.toLocaleLowerCase()===s[e].ti.addr.toLocaleLowerCase())),n={ati:g.value[e].ati,packages:g.value[e].packages,orders:{...r,orders:a}};d.push({...s[e],name:t,user:n})}else d.push({...s[e],name:t})}y.value=d}return{account:n,tokenList:y,stakeRate:A,accountInfo:f,userTokenList:g,price:o,seroPrice:c,ethPrice:u,withdrawFee:S,triggerFee:T,systemInfoV2:v,totalReward:R,getSystemInfo:C}}));export{y as a,S as u};
